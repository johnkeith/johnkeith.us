<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[John Keith]]></title>
  <link href="http://johnk.herokuapp.com/atom.xml" rel="self"/>
  <link href="http://johnk.herokuapp.com/"/>
  <updated>2014-01-27T22:44:08-05:00</updated>
  <id>http://johnk.herokuapp.com/</id>
  <author>
    <name><![CDATA[John Keith]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Awesome way to learn HAML]]></title>
    <link href="http://johnk.herokuapp.com/blog/2014/01/27/awesome-way-to-learn-haml/"/>
    <updated>2014-01-27T22:23:38-05:00</updated>
    <id>http://johnk.herokuapp.com/blog/2014/01/27/awesome-way-to-learn-haml</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been meaning to take some time and learn one of the HTML templating engines. One of the best parts about the <a href="http://www.codepen.com">Codepen</a> site is that it is a great place to practice with engines like HAML and Slim. (Not to mention, doing so gives me a chance to try installing the Codepen plugin here on my Octopress).</p>

<pre class="codepen" data-height="400" data-type="HAML" data-href="sEzqJ" data-user="johnkeith"><code> </code></pre>


<script async src="http://codepen.io:/assets/embed/ei.js"></script>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Uncovering Good Resources]]></title>
    <link href="http://johnk.herokuapp.com/blog/2014/01/25/uncovering-good-resources/"/>
    <updated>2014-01-25T12:07:18-05:00</updated>
    <id>http://johnk.herokuapp.com/blog/2014/01/25/uncovering-good-resources</id>
    <content type="html"><![CDATA[<p>There are two parts about learning web development that I have found consistently difficult.</p>

<ol>
<li><p>Finding a sensible path through the myriad of resources for learning to code</p></li>
<li><p>Staying focused</p></li>
</ol>


<p>I think these two go hand-in-hand. After moving beyond a walled garden like Codeacademy, finding out where to go and what to tackle next is really hard! There is such a vast array of languages and frameworks to try that it is baffling to try and decipher what will be most beneficial to learn.</p>

<p>All things considered, I&rsquo;m not sure this is really something to worry much about. Diving into almost any language at this point will help me further the skills I have gained and develop a greater understanding of how all these different moving pieces of the web fit together.</p>

<p>That said, I am concerned about losing focus. I&rsquo;ve learned a great deal about Ruby and I want to keep moving forward with it (especially after learning about you can make iOS apps using RubyMotion!), but I keep getting excited (side-tracked) by all kinds of shiny new development tools I&rsquo;m finding.</p>

<p>For example, the last couple of days I&rsquo;ve been playing with <a href="http://www.sinatrarb.com">Sinatra</a> and loving it! Since I&rsquo;m going to be heading off to coding bootcamp soon, I figure it would be a good choice to wait on learning Rails until I get there and instead focus on exploring other Ruby-based frameworks. (Also, Sinatra is a heck of a lot easier to wrap your head around than Rails!).</p>

<p>So, in order to keep myself on the right path, I&rsquo;m going to work on building stuff with Sinatra (<a href="http://mherman.org/blog/2013/06/08/designing-with-class-sinatra-plus-postgresql-plus-heroku/">this tutorial</a> really was a great way to start), while continuing to read and work on Ruby fundamentals. Speaking of great resources, I finished TestFirst.org&rsquo;s <a href="http://testfirst.org/learn_ruby">Learn Ruby</a> last weekend and that was an awesome way to start applying the Ruby I&rsquo;ve learned. <a href="https://github.com/johnkeith/testfirstruby">My solutions</a> could certainly use some work, but I think these kinds of test-driven coding challenges are the best way for me to keep moving forward with Ruby at this point.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Treehouse Trial (and travails)]]></title>
    <link href="http://johnk.herokuapp.com/blog/2014/01/01/my-treehouse-trial-and-travails/"/>
    <updated>2014-01-01T13:47:35-05:00</updated>
    <id>http://johnk.herokuapp.com/blog/2014/01/01/my-treehouse-trial-and-travails</id>
    <content type="html"><![CDATA[<p>With the wonderful break from school here at the holidays, I decided to join Treehouse and explore this popular learning platform (and maybe pick up a little Objective C and iOS while I&rsquo;m at it!). I&rsquo;m on day three of a two week trial and so far I&rsquo;ve been impressed by the site and its fantastic array of offerings, despite my devotion to Codeacademy. That said, after completing Treehouse&rsquo;s <a href="http://teamtreehouse.com/library/usability-foundations">Usability Foundations</a> course and dipping my toes into the iOS Development track, I certainly have run across a few areas that could use improvement.</p>

<p>Before diving into the usability issues I&rsquo;ve experienced, let me say that I have really enjoyed Treehouse thus far. I was initially wary of the video-lecture style that defines the Treehouse delivery mechanism, but I think there is something to be said for adding the human element of an embodied teacher when learning to code. While the learn-by-watching method of Treehouse differs greatly from the Codeacademy approach (code, code, code!), I am currently enjoying it as I start trying to unpack the verbosity of Objective C.</p>

<p>On the other hand, I have experienced some quirky behaviors after the video segments are done and you start to do the Code Challenges and other quizzes. There is a noticeable delay (as in 7 to 10 seconds) in between when completing the final exercise in a coding exercise (receiving the message &ldquo;Congrats! You completed the challenge!&rdquo;) and when the dialogue box appears telling you how many points the completion earns.</p>

<p><img src="http://johnk.herokuapp.com/images/postimg/nsstringChallenge.png"></p>

<p>I&rsquo;ve noticed this delay only occurs the first time you are completing a Code Challenge, not if you go back and retake a challenge. That fact, however, brings up another problem: when you complete a challenge you have already completed, you are still presented with a dialogue box telling you points are being awarded! It is certainly a little confusing to receive the message that I have earned 6 points for completing the NSString challenge, but then not see any change in my overall score.</p>

<p>I think the fixes in these cases could be straightforward. Simply offer a loading indicator if the long delay between challenge completion and points awarding is unavoidable. Then, if retaking a challenge already completed, make sure the dialogue box at the end mentions that this challenge has already been passed and no new points will be awarded.</p>

<p>In terms of quizzes, there are a few pedagogical problems when you answer a question incorrectly. On the iPad app, the user is given little feedback when a question is answered incorrectly &ndash; all you get is a red box and an unhappy beep. The web interface offers an experience that is much the same (an incorrect answer garners a message of &ldquo;Bummer! Unfortunately, that answer is incorrect.&rdquo;).</p>

<p><img src="http://johnk.herokuapp.com/images/postimg/bummerAnswer.png"></p>

<p>What I really find frustrating is not this method of handling incorrect answers &ndash; the quiz should not tell you the correct answer as you are taking it, in case you do not pass. The problem arises when you reach the end of a quiz, perhaps with one incorrect answer, and are awarded your points without having a chance to review the question you answered incorrectly.</p>

<p><img src="http://johnk.herokuapp.com/images/postimg/incorrectAnswerPassing.jpg"></p>

<p>I have run into this scenario multiple times on the iOS track: I&rsquo;ve missed a question that I would love to know the answer to, but I have to retake the entire quiz to attempt the question again. This is a highly inefficient setup for both the user and the system.</p>

<p>Again, I think this usability problem might have a simple fix. Perhaps, at the end of quizzes on the iPad and the web interface, add a button that says &ldquo;Review incorrect answers&rdquo; that allows the user to review the question(s) they missed.</p>

<p>Changing gears, I&rsquo;ve also found that navigating to courses and tracks you are currently enrolled in is not the easiest, both on  the web and the iPad app. With the iPad app, one tap when you open the app brings up the dashboard and shows you what track you are working on, then one more tap takes you right into the section of the track you are on.</p>

<p><img src="http://johnk.herokuapp.com/images/postimg/dashboardiPad.jpg"></p>

<p>That said, you still have to scroll down to the lecture or quiz you left off at, but this is a minor inconvenience.</p>

<p>When you login to the web interface, you are presented with a Dashboard page that shows the current track you are on and a button to resume your progress, as with the iPad app.</p>

<p><img src="http://johnk.herokuapp.com/images/postimg/dashboardWeb.png"></p>

<p>What is lacking from both interfaces, however, is any indication of other courses a user might be currently working through. (For example, though I am on the iOS Development track, I have also been watching lectures and taking quizzes from Usability Foundations, Career Foundations, and Database Foundations). Neither on the Dashboard page nor on my profile page is there a link to any of the other courses from the Treehouse Library that I&rsquo;m working to finish. Having to click or tap on Library and then navigate through multiple layers to find the course I have started is difficult and undoubtedly poor from a usability standpoint.</p>

<p>Perhaps what Treehouse could do is offer a more informative Dashboard page. In the Welcome Home section of the web interface, current courses could be listed alongside the current track, accompanied by resume buttons. The same holds true on the iPad app &ndash; under the In Progress section, the current courses could also be visible and tapable.</p>

<p>Treehouse is an awesome product and I&rsquo;m excited about continuing to explore its many facets, but I do hope the Treehouse Team will tighten up some aspects of the experience. I believe the few small tweaks above could easily make Treehouse one of the best online learning platforms available for aspiring developers.</p>
]]></content>
  </entry>
  
</feed>
